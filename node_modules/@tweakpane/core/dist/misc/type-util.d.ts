export type Class<T> = new (...args: any[]) => T;
export type Tuple2<T> = [T, T];
export type Tuple3<T> = [T, T, T];
export type Tuple4<T> = [T, T, T, T];
export declare function forceCast<T>(v: any): T;
export declare function isEmpty<T>(value: T | null | undefined): value is null | undefined;
export declare function isObject(value: unknown): value is object;
export declare function isRecord(value: unknown): value is Record<string, unknown>;
export declare function deepEqualsArray<T>(a1: T[], a2: T[]): boolean;
export declare function isPropertyWritable(obj: unknown, key: string): boolean;
export declare function deepMerge(r1: Record<string, unknown>, r2: Record<string, unknown>): Record<string, unknown>;
